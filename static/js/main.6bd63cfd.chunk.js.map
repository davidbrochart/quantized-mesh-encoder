{"version":3,"sources":["quantized-mesh/decode-quantized-mesh.js","quantized-mesh/parse-quantized-mesh.js","quantized-mesh/quantized-mesh-loader.js","quantized-mesh-layer.js","info-box.js","App.js","serviceWorker.js","index.js"],"names":["QUANTIZED_MESH_HEADER","Map","Float64Array","BYTES_PER_ELEMENT","Float32Array","decodeZigZag","value","decodeIndex","buffer","position","indicesCount","bytesPerIndex","indices","encoded","Uint16Array","Uint32Array","highest","i","length","code","decodeWaterMaskExtension","extensionDataView","slice","byteOffset","byteLength","DECODING_STEPS","DEFAULT_OPTIONS","maxDecodingStep","decode","data","userOptions","options","Object","assign","view","DataView","dataView","header","key","bytesCount","getter","getFloat64","getFloat32","call","headerEndPosition","decodeHeader","vertexCount","getUint32","vertexData","bytesPerArrayElement","elementArrayLength","uArrayStartPosition","vArrayStartPosition","heightArrayStartPosition","u","v","height","getUint16","vertexDataEndPosition","decodeVertexData","triangleCount","triangleIndicesCount","triangleIndices","triangleIndicesEndPosition","decodeTriangleIndices","westVertexCount","westIndices","southVertexCount","southIndices","eastVertexCount","eastIndices","northVertexCount","northIndices","edgeIndicesEndPosition","decodeEdgeIndices","extensions","indicesEndPosition","extensionsEndPosition","extensionId","getUint8","Uint8Array","extensionLength","extensionView","vertexNormals","waterMask","decodeExtensions","getTileMesh","arrayBuffer","bounds","attributes","minHeight","maxHeight","minX","minY","xScale","yScale","zScale","nCoords","positions","texCoords","x","y","z","POSITION","size","TEXCOORD_0","getMeshAttributes","loaderData","boundingBox","getMeshBoundingBox","mode","loadQuantizedMesh","QuantizedMeshWorkerLoader","id","name","version","mimeTypes","workerUrl","QuantizedMeshLoader","parseSync","parseQuantizedMesh","parse","a","DUMMY_DATA","getMeshMaxError","toFixed","quantizedMeshUrl","opts","mosaicUrl","meshMaxError","searchParams","URLSearchParams","url","mesh_max_error","toString","QuantizedMeshTerrainLayer","minZoom","maxZoom","onViewportLoad","zRange","TileLayer","getTileData","renderSubLayers","refinementStrategy","terrainUrl","load","worker","props","tile","SimpleMeshLayer","mesh","getPolygonOffset","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","modelMatrix","getModelMatrix","getPosition","d","getColor","worldScale","Math","pow","xOffset","yOffset","Matrix4","translate","scale","InfoBox","Container","style","width","maxWidth","left","top","padding","zIndex","backgroundColor","pointerEvents","overflowY","overflow","Header","as","target","rel","href","Icon","INITIAL_VIEW_STATE","latitude","longitude","bearing","pitch","zoom","maxPitch","App","state","viewState","every","ranges","map","arr","bound","minZ","min","maxZ","max","setState","this","layers","onViewStateChange","controller","touchRotate","React","Component","document","body","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6bd63cfd.chunk.js","sourcesContent":["// Copyright (C) 2018-2019 HERE Europe B.V.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst QUANTIZED_MESH_HEADER = new Map([\n  ['centerX', Float64Array.BYTES_PER_ELEMENT],\n  ['centerY', Float64Array.BYTES_PER_ELEMENT],\n  ['centerZ', Float64Array.BYTES_PER_ELEMENT],\n\n  ['minHeight', Float32Array.BYTES_PER_ELEMENT],\n  ['maxHeight', Float32Array.BYTES_PER_ELEMENT],\n\n  ['boundingSphereCenterX', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterY', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterZ', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereRadius', Float64Array.BYTES_PER_ELEMENT],\n\n  ['horizonOcclusionPointX', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointY', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointZ', Float64Array.BYTES_PER_ELEMENT]\n]);\n\nfunction decodeZigZag(value) {\n  return (value >> 1) ^ -(value & 1);\n}\n\nfunction decodeHeader(dataView) {\n  let position = 0;\n  const header = {};\n\n  for (const [key, bytesCount] of QUANTIZED_MESH_HEADER) {\n    const getter = bytesCount === 8 ? dataView.getFloat64 : dataView.getFloat32;\n\n    header[key] = getter.call(dataView, position, true);\n    position += bytesCount;\n  }\n\n  return {header, headerEndPosition: position};\n}\n\nfunction decodeVertexData(dataView, headerEndPosition) {\n  let position = headerEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = dataView.getUint32(position, true);\n  const vertexData = new Uint16Array(vertexCount * elementsPerVertex);\n\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const bytesPerArrayElement = Uint16Array.BYTES_PER_ELEMENT;\n  const elementArrayLength = vertexCount * bytesPerArrayElement;\n  const uArrayStartPosition = position;\n  const vArrayStartPosition = uArrayStartPosition + elementArrayLength;\n  const heightArrayStartPosition = vArrayStartPosition + elementArrayLength;\n\n  let u = 0;\n  let v = 0;\n  let height = 0;\n\n  for (let i = 0; i < vertexCount; i++) {\n    u += decodeZigZag(dataView.getUint16(uArrayStartPosition + bytesPerArrayElement * i, true));\n    v += decodeZigZag(dataView.getUint16(vArrayStartPosition + bytesPerArrayElement * i, true));\n    height += decodeZigZag(\n      dataView.getUint16(heightArrayStartPosition + bytesPerArrayElement * i, true)\n    );\n\n    vertexData[i] = u;\n    vertexData[i + vertexCount] = v;\n    vertexData[i + vertexCount * 2] = height;\n  }\n\n  position += elementArrayLength * 3;\n\n  return {vertexData, vertexDataEndPosition: position};\n}\n\nfunction decodeIndex(buffer, position, indicesCount, bytesPerIndex, encoded = true) {\n  let indices;\n\n  if (bytesPerIndex === 2) {\n    indices = new Uint16Array(buffer, position, indicesCount);\n  } else {\n    indices = new Uint32Array(buffer, position, indicesCount);\n  }\n\n  if (!encoded) {\n    return indices;\n  }\n\n  let highest = 0;\n\n  for (let i = 0; i < indices.length; ++i) {\n    const code = indices[i];\n\n    indices[i] = highest - code;\n\n    if (code === 0) {\n      ++highest;\n    }\n  }\n\n  return indices;\n}\n\nfunction decodeTriangleIndices(dataView, vertexData, vertexDataEndPosition) {\n  let position = vertexDataEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  if (position % bytesPerIndex !== 0) {\n    position += bytesPerIndex - (position % bytesPerIndex);\n  }\n\n  const triangleCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const triangleIndicesCount = triangleCount * 3;\n  const triangleIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    triangleIndicesCount,\n    bytesPerIndex\n  );\n  position += triangleIndicesCount * bytesPerIndex;\n\n  return {\n    triangleIndicesEndPosition: position,\n    triangleIndices\n  };\n}\n\nfunction decodeEdgeIndices(dataView, vertexData, triangleIndicesEndPosition) {\n  let position = triangleIndicesEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  const westVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const westIndices = decodeIndex(dataView.buffer, position, westVertexCount, bytesPerIndex, false);\n  position += westVertexCount * bytesPerIndex;\n\n  const southVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const southIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    southVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += southVertexCount * bytesPerIndex;\n\n  const eastVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const eastIndices = decodeIndex(dataView.buffer, position, eastVertexCount, bytesPerIndex, false);\n  position += eastVertexCount * bytesPerIndex;\n\n  const northVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const northIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    northVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += northVertexCount * bytesPerIndex;\n\n  return {\n    edgeIndicesEndPosition: position,\n    westIndices,\n    southIndices,\n    eastIndices,\n    northIndices\n  };\n}\n\nfunction decodeVertexNormalsExtension(extensionDataView) {\n  return new Uint8Array(\n    extensionDataView.buffer,\n    extensionDataView.byteOffset,\n    extensionDataView.byteLength\n  );\n}\n\nfunction decodeWaterMaskExtension(extensionDataView) {\n  return extensionDataView.buffer.slice(\n    extensionDataView.byteOffset,\n    extensionDataView.byteOffset + extensionDataView.byteLength\n  );\n}\n\nfunction decodeExtensions(dataView, indicesEndPosition) {\n  const extensions = {};\n\n  if (dataView.byteLength <= indicesEndPosition) {\n    return {extensions, extensionsEndPosition: indicesEndPosition};\n  }\n\n  let position = indicesEndPosition;\n\n  while (position < dataView.byteLength) {\n    const extensionId = dataView.getUint8(position, true);\n    position += Uint8Array.BYTES_PER_ELEMENT;\n\n    const extensionLength = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n\n    const extensionView = new DataView(dataView.buffer, position, extensionLength);\n\n    switch (extensionId) {\n      case 1: {\n        extensions.vertexNormals = decodeVertexNormalsExtension(extensionView);\n\n        break;\n      }\n      case 2: {\n        extensions.waterMask = decodeWaterMaskExtension(extensionView);\n\n        break;\n      }\n      default: {\n        // console.warn(`Unknown extension with id ${extensionId}`)\n      }\n    }\n\n    position += extensionLength;\n  }\n\n  return {extensions, extensionsEndPosition: position};\n}\n\nexport const DECODING_STEPS = {\n  header: 0,\n  vertices: 1,\n  triangleIndices: 2,\n  edgeIndices: 3,\n  extensions: 4\n};\n\nconst DEFAULT_OPTIONS = {\n  maxDecodingStep: DECODING_STEPS.extensions\n};\n\nexport default function decode(data, userOptions) {\n  const options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  const view = new DataView(data);\n  const {header, headerEndPosition} = decodeHeader(view);\n\n  if (options.maxDecodingStep < DECODING_STEPS.vertices) {\n    return {header};\n  }\n\n  const {vertexData, vertexDataEndPosition} = decodeVertexData(view, headerEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.triangleIndices) {\n    return {header, vertexData};\n  }\n\n  const {triangleIndices, triangleIndicesEndPosition} = decodeTriangleIndices(\n    view,\n    vertexData,\n    vertexDataEndPosition\n  );\n\n  if (options.maxDecodingStep < DECODING_STEPS.edgeIndices) {\n    return {header, vertexData, triangleIndices};\n  }\n\n  const {\n    westIndices,\n    southIndices,\n    eastIndices,\n    northIndices,\n    edgeIndicesEndPosition\n  } = decodeEdgeIndices(view, vertexData, triangleIndicesEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.extensions) {\n    return {\n      header,\n      vertexData,\n      triangleIndices,\n      westIndices,\n      northIndices,\n      eastIndices,\n      southIndices\n    };\n  }\n\n  const {extensions} = decodeExtensions(view, edgeIndicesEndPosition);\n\n  return {\n    header,\n    vertexData,\n    triangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices,\n    extensions\n  };\n}\n","import { getMeshBoundingBox } from \"@loaders.gl/loader-utils\";\nimport decode, { DECODING_STEPS } from \"./decode-quantized-mesh\";\n\nfunction getMeshAttributes(vertexData, header, bounds) {\n  const { minHeight, maxHeight } = header;\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, 1, 1];\n  const xScale = maxX - minX;\n  const yScale = maxY - minY;\n  const zScale = maxHeight - minHeight;\n\n  const nCoords = vertexData.length / 3;\n  // vec3. x, y defined by bounds, z in meters\n  const positions = new Float32Array(nCoords * 3);\n\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(nCoords * 2);\n\n  // Data is not interleaved; all u, then all v, then all heights\n  for (let i = 0; i < nCoords; i++) {\n    const x = vertexData[i] / 32767;\n    const y = vertexData[i + nCoords] / 32767;\n    const z = vertexData[i + nCoords * 2] / 32767;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = y * yScale + minY;\n    positions[3 * i + 2] = z * zScale + minHeight;\n\n    texCoords[2 * i + 0] = x;\n    texCoords[2 * i + 1] = y;\n  }\n\n  return {\n    POSITION: { value: positions, size: 3 },\n    TEXCOORD_0: { value: texCoords, size: 2 },\n    // TODO: Parse normals if they exist in the file\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\nfunction getTileMesh(arrayBuffer, options) {\n  if (!arrayBuffer) {\n    return null;\n  }\n  const { bounds } = options;\n  // Don't parse edge indices or format extensions\n  const { header, vertexData, triangleIndices } = decode(\n    arrayBuffer,\n    DECODING_STEPS.triangleIndices\n  );\n  // TODO: use skirt information from file\n  const attributes = getMeshAttributes(vertexData, header, bounds);\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {},\n    },\n    header: {\n      vertexCount: triangleIndices.length,\n      // TODO: Find bounding box from header, instead of doing extra pass over\n      // vertices.\n      boundingBox: getMeshBoundingBox(attributes),\n    },\n    mode: 4, // TRIANGLES\n    indices: { value: triangleIndices, size: 1 },\n    attributes,\n  };\n}\n\nexport default function loadQuantizedMesh(arrayBuffer, options) {\n  return getTileMesh(arrayBuffer, options[\"quantized-mesh\"]);\n}\n","import parseQuantizedMesh from './parse-quantized-mesh';\n/** @typedef {import('@loaders.gl/loader-utils').LoaderObject} LoaderObject */\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\n// const VERSION = typeof __VERSION__ !== \"undefined\" ? __VERSION__ : \"latest\";\nconst VERSION = \"latest\";\n\n/** @type {LoaderObject} */\nexport const QuantizedMeshWorkerLoader = {\n  id: 'quantized-mesh',\n  name: 'Quantized Mesh',\n  version: VERSION,\n  extensions: ['terrain'],\n  mimeTypes: ['application/vnd.quantized-mesh'],\n  options: {\n    'quantized-mesh': {\n      workerUrl: `https://unpkg.com/@loaders.gl/terrain@${VERSION}/dist/quantized-mesh-loader.worker.js`,\n      bounds: [0, 0, 1, 1]\n    }\n  }\n};\n\n/** @type {LoaderObject} */\nexport const QuantizedMeshLoader = {\n  ...QuantizedMeshWorkerLoader,\n  parseSync: parseQuantizedMesh,\n  parse: async (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options)\n};\n","import { TileLayer } from \"@deck.gl/geo-layers\";\nimport { SimpleMeshLayer } from \"@deck.gl/mesh-layers\";\nimport { COORDINATE_SYSTEM } from \"@deck.gl/core\";\nimport { load } from \"@loaders.gl/core\";\n// import { QuantizedMeshLoader } from \"@loaders.gl/terrain\";\nimport { QuantizedMeshLoader } from \"./quantized-mesh/quantized-mesh-loader\";\nimport { Matrix4 } from \"math.gl\";\n\nconst DUMMY_DATA = [1];\n\n// Error suggestion from here\n// https://www.linkedin.com/pulse/fast-cesium-terrain-rendering-new-quantized-mesh-output-alvaro-huarte/\nfunction getMeshMaxError(z) {\n  return (77067.34 / (1 << z)).toFixed(2);\n}\n\nfunction quantizedMeshUrl(opts) {\n  const { x, y, z, mosaicUrl = \"terrarium\", meshMaxError = 10 } = opts;\n  const params = {\n    url: mosaicUrl,\n    mesh_max_error: meshMaxError,\n  };\n  const searchParams = new URLSearchParams(params);\n  let baseUrl = `https://us-east-1-lambda.kylebarron.dev/dem/mesh/${z}/${x}/${y}.terrain?`;\n  return baseUrl + searchParams.toString();\n}\n\nexport function QuantizedMeshTerrainLayer(opts) {\n  const { minZoom = 0, maxZoom = 15, onViewportLoad, zRange } = opts || {};\n  return new TileLayer({\n    id: \"quantized-mesh-tile\",\n    minZoom,\n    maxZoom,\n    getTileData,\n    renderSubLayers,\n    onViewportLoad,\n    zRange,\n    refinementStrategy: \"no-overlap\",\n  });\n}\n\nasync function getTileData({ x, y, z }) {\n  const meshMaxError = getMeshMaxError(z);\n  const terrainUrl = quantizedMeshUrl({ x, y, z, meshMaxError });\n  return load(terrainUrl, QuantizedMeshLoader, {worker: false});\n}\n\nfunction renderSubLayers(props) {\n  const { data, tile } = props;\n\n  return [\n    new SimpleMeshLayer(props, {\n      data: DUMMY_DATA,\n      mesh: data,\n      getPolygonOffset: null,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      modelMatrix: getModelMatrix(tile),\n      getPosition: (d) => [0, 0, 0],\n      // Color to use if surfaceImage is unavailable\n      getColor: [200, 200, 200],\n      // wireframe: true,\n    }),\n  ];\n}\n\n// From https://github.com/uber/deck.gl/blob/b1901b11cbdcb82b317e1579ff236d1ca1d03ea7/modules/geo-layers/src/mvt-tile-layer/mvt-tile-layer.js#L41-L52\n// Necessary when using COORDINATE_SYSTEM.CARTESIAN with the standard web\n// mercator viewport\nfunction getModelMatrix(tile) {\n  const WORLD_SIZE = 512;\n  const worldScale = Math.pow(2, tile.z);\n\n  const xScale = WORLD_SIZE / worldScale;\n  const yScale = -xScale;\n\n  const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n  const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n  return new Matrix4()\n    .translate([xOffset, yOffset, 0])\n    .scale([xScale, yScale, 1]);\n}\n","import React from \"react\";\nimport { Header, Container, Icon } from \"semantic-ui-react\";\n\nexport default function InfoBox(props) {\n  return (\n    <Container\n      style={{\n        position: \"absolute\",\n        width: 300,\n        maxWidth: '50%',\n        left: 5,\n        top: 5,\n        padding: 5,\n        maxHeight: \"50%\",\n        zIndex: 1,\n        backgroundColor: \"#fff\",\n        pointerEvents: \"auto\",\n        overflowY: \"auto\",\n        overflow: \"visible\",\n      }}\n    >\n      <Header as=\"h4\">Serverless Quantized Mesh</Header>\n      <p>\n        Uses{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/kylebarron/pymartini\"\n        >\n          <Icon name=\"github\" />\n          <code>pymartini</code>\n        </a>{\" \"}\n        for mesh generation,{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/kylebarron/quantized-mesh-encoder\"\n        >\n          <Icon name=\"github\" />\n          <code>quantized-mesh-encoder</code>\n        </a>{\" \"}\n        for encoding to quantized mesh,{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/kylebarron/dem-tiler\"\n        >\n          <Icon name=\"github\" />\n          <code>dem-tiler</code>\n        </a>{\" \"}\n        for the serverless API, and{\" \"}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://deck.gl\">\n          <code>deck.gl</code>\n        </a>{\" \"}\n        for rendering. You can also easily overlay a texture source, e.g. Mapbox\n        Satellite tiles, with deck.gl.{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/kylebarron/quantized-mesh-encoder/tree/master/site\"\n        >\n          <Icon name=\"github\" />\n          Example source.\n        </a>\n      </p>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport { QuantizedMeshTerrainLayer } from \"./quantized-mesh-layer\";\nimport InfoBox from \"./info-box\";\nimport \"./App.css\";\n\nconst INITIAL_VIEW_STATE = {\n  latitude: 36.07091852096502,\n  longitude: -112.00934837595949,\n  bearing: -35.19642857142857,\n  pitch: 60,\n  zoom: 13.574472859832357,\n  maxPitch: 89,\n};\n\nclass App extends React.Component {\n  state = {\n    viewState: INITIAL_VIEW_STATE,\n    zRange: null,\n  };\n\n  // Update zRange of viewport\n  onViewportLoad = (data) => {\n    if (!data || data.length === 0 || data.every((x) => !x)) {\n      return;\n    }\n\n    const { zRange } = this.state;\n    const ranges = data.map((arr) => {\n      const bounds = arr.header.boundingBox;\n      return bounds.map((bound) => bound[2]);\n    });\n    const minZ = Math.min(...ranges.map((x) => x[0]));\n    const maxZ = Math.max(...ranges.map((x) => x[1]));\n\n    if (!zRange || minZ < zRange[0] || maxZ > zRange[1]) {\n      this.setState({ zRange: [minZ, maxZ] });\n    }\n  };\n\n  render() {\n    const { viewState, zRange } = this.state;\n\n    const layers = [\n      QuantizedMeshTerrainLayer({\n        onViewportLoad: this.onViewportLoad,\n        zRange,\n      }),\n    ];\n\n    return (\n      <div>\n        <DeckGL\n          viewState={viewState}\n          layers={layers}\n          onViewStateChange={({ viewState }) => this.setState({ viewState })}\n          controller={{ touchRotate: true }}\n        />\n        <InfoBox />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\ndocument.body.style.margin = 0;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}